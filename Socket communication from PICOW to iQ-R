#私の電子工作は、「最新Pico W対応！ラズパイPico完全ガイド」を大いに参考にしています
#本当に素晴らしい著書です。素人の私を大いに助けて頂いております
#この本を購入すると、多くのサンプルプログラムを利用出来ます
#サンプルを大いに活用しておりますので、そのままでは下記は駆動しません

from machine import Pin, I2C
import network
import socket
import time
import bme280
from ssd1306 import SSD1306_I2C
import struct

#BME280_set1　=>　センサのPIN設定
I2C_SDA = 18
I2C_SCL = 19
I2C_CH = 1
I2C_ADDR = 0x76

#BME280_set2　=>　モジュール接続設定
i2c_1 = I2C( I2C_CH, scl=Pin( I2C_SCL ), sda=Pin( I2C_SDA ), freq=100000)
sensor = bme280.bme280( i2c_1, I2C_ADDR )
sensor.setup()



#OLED_set　=>　有機ELの基本、PIN設定
WIDTH  = 128
HEIGHT = 64

I2C_01_SDA = machine.Pin(8)
I2C_01_SCL = machine.Pin(9)

i2c = I2C(0, sda = I2C_01_SDA, scl = I2C_01_SCL,freq=400000)
i2c.scan()

print("I2C Address      : "+hex(i2c.scan()[0]).upper())
print("I2C Configuration: "+str(i2c))

oled = SSD1306_I2C( WIDTH, HEIGHT, i2c )
oled.fill( 0 )


#Wi-Fi_setup　=> Wi-Fiポート設定、id & PW & IPアドレス固定設定　
server_port = 4000

ssid = 'xxxxxxxxxxx'
passwd = 'xxxxxxxxxxxxx'

ip_addr = "xxx.xxx.xxx.xxx"
netmask = "xxx.xxx.xxx.xxx"
getway = "xxx.xxx.xxx.xxx"
nameserver = "xxx.xxx.xxx.xxx"


wifi = network.WLAN( network.STA_IF )
wifi.active( True )
wifi.connect( ssid, passwd )

while wifi.isconnected() == False:
    print("Try to connect wifi network.")
    time.sleep( 1 )

wifi.ifconfig([ip_addr, netmask, getway, nameserver])

wifi_status = wifi.ifconfig()
print( "Connected network." )
print( "IP Address:{}  Netmask:{}".format( wifi_status[0], wifi_status[1] ) )
print( "Default Gateway:{}  Name Server:{}".format( wifi_status[2], wifi_status[3] ) )
print( "-----" )


#socket_setup　=>　ソケット通信準備、ソケットオープン
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind( ("xxx.xxx.xxx.xxx", server_port ) )
server.listen( 1 )

#クライアントからサーバーへのアクセスがあった場合、下記の動作を実行
#温度・湿度・気圧は、Pythonにて浮動小数点をBytesへ強制変換しています
#Bytes（ビックエンディアン）へ変換＆クライアントへデータ送信（send）しています
#温度・湿度・気圧は、それぞれ個別送信しています

#OLED(有機EL)は、クライアントからサーバーへアクセスされた時の測定値を表示します

client, addr = server.accept()

i = 0

while i<300000:
    
    print( "Request form {}".format( addr ) )
    
    ( temp, humi, press ) = sensor.get_value()
    print( "Temperature:{:.2f}C  Humidity:{:.2f}%  Pressure:{:.2f}hPa".format( temp, humi, press ))
    
    oled.text( "Raspberry Pi", 5, 5 )
    oled.text( "Pico W", 5, 15 )
    oled.text( 'Temp:{:.2f}C'.format(temp), 5, 25 )
    oled.text( 'Humi:{:.2f}%'.format(humi), 5, 35 )
    oled.text( 'Pres:{:.2f}hPa'.format(press), 5, 45 )
    oled.show()
    oled.fill(0)
    
    #「temp」「humi」「press」は、小数点第二位で調整予定
    
    
    temp_pack = struct.pack("f", temp)
    humi_pack = struct.pack("f", humi)
    press_pack = struct.pack("f", press)
    
    
    client.send(temp_pack + humi_pack + press_pack)
    client.recv(1024)
    time.sleep_ms(100)
    
    
    i += 1
    i -= 1
    
    
client.close()
server.close()

